def Main():
        
    # Importing the Libraries
    #import win32com.client
    #import sys
    import subprocess
    #import time
    
#   получить имя пользователя для создания нужных папок
    import getpass
    sys_user = getpass.getuser()
        
    
    from pathlib import Path
    Path("C:/Users/" + sys_user + "/python_SAP_scripting/MB51_current_report").mkdir(parents=True, exist_ok=True)
    
    import os
    myfile= "C:/Users/" + sys_user + "/python_SAP_scripting/MB31_current_report/export_MB31.xlsx"

    # если файл с выгрузкой есть, удаляем его, перед тем, как SAP запишет новый
    if os.path.isfile(myfile):
        os.remove(myfile)
    
    
    import pandas as pd
    # загружаем файл с параметрами по тразакции    
    df_transaction_info = pd.read_excel('C:/Users/' + sys_user + '/python_SAP_scripting/template_MB51.xlsm',  header=None)
    df_transaction_info = df_transaction_info.fillna('') 
    
    # список тэгов
    tag_list = ['okcd', # номер транзакции
                'ctxtMATNR-LOW").text', # id материала
                'ctxtBWART-LOW").text',  # вид движения "c"
                'ctxtBWART-HIGH").text', # вид движения "по"
                'ctxtBUDAT-LOW").text', # дата начала периода
                'ctxtBUDAT-HIGH").text', # дата конца периода
                'ctxtALV_DEF").text', # выбранный layout
                'ctxtDY_PATH").text', # путь к папке
                'ctxtDY_FILENAME").text'] # название файла    
    
    # преобразуем даты в текстовый формат
    #df_transaction_info.loc[1:3,1] = df_transaction_info.loc[1:3,1].to_string()
    df_transaction_info.loc[1,1]= str(df_transaction_info.loc[1,1])
    df_transaction_info.loc[2,1]= str(df_transaction_info.loc[2,1])
    df_transaction_info.loc[3,1]= str(df_transaction_info.loc[3,1])
    
    
    df_transaction_info.loc[4,1]= df_transaction_info.loc[4,1].strftime('%d.%m.%Y')
    df_transaction_info.loc[5,1] =df_transaction_info.loc[5,1].strftime('%d.%m.%Y')
    

     # создаем "словарь" с названиями полей и значениями, добавив также неизменяемые путь файла к папке и название файла
    path = r"C:\Users\Maksim.Smirnov\python_SAP_scripting\MB51_current_report" + "\\ ".strip()
    
    path = path.replace('Maxim.Smirnov', sys_user)
 
    transaction_val_list = list(df_transaction_info.iloc[0:7,1]) + [path, 'export_MB51.xlsx' ]

    dict_transaction_info = dict(zip(tag_list, transaction_val_list))
    
         
    
    with open('C:\\Users\\'+ sys_user +'\\python_SAP_scripting\\script_MB51_vba.vbs', 'r') as f:
        lines = f.readlines()
                            
    for tag in list (dict_transaction_info.keys())    :
            
        for i in range (0, len(lines)):
            tag_id = tag
            tag_value = dict_transaction_info.get(tag) 
            
            if lines[i].find(tag_id) == -1:
                continue
            else:
                eq_sign= lines[i].find('=')
                # print (i)
                # print (lines[i].find(tag))
                lines[i] = "".join((lines[i][:eq_sign+3],tag_value, '"'))
    # убираем пустые строки ("костыль")      
    lines2 = [a for a in lines if a != '\n']
    with open('C:\\Users\\'+ sys_user +'\\python_SAP_scripting\\script_MB51_vba.vbs', "w") as f:
        for item in lines2:
            f.write("%s\n" % item)
            
 
            
    subprocess.call(['cscript.exe', 'C:\\Users\\'+ sys_user +'\\python_SAP_scripting\\script_MB51_vba.vbs'])   
     

#-Main------------------------------------------------------------------
if __name__ == "__main__":
  Main()
